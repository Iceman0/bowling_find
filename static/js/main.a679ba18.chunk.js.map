{"version":3,"sources":["img/persik.png","utils/sendCLick.js","panels/Components/FindFields.js","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","btnSendClick","name","setFindResult","setColumns","setLoading","allTable","setAllTable","myColumns","myValue","SPREADSHEET_ID","auth","CLIENT_EMAIL","SHEET_ID","client_email","PRIVATE_KEY","private_key","doc","GoogleSpreadsheet","setResult","columns","dataSource1","dataSource","filter","item","find","undefined","i","toLowerCase","indexOf","parseInt","length","title","dataIndex","key","render","text","Link","href","link","match","target","row","a","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","result","console","error","appendSpreadsheet","Name","then","value","_sheet","headerValues","map","Object","assign","id","catch","FindFields","inputValue","setInputValue","selectValue","setSelectValue","top","Select","placeholder","onChange","e","type","bufColumns","Home","fetchedUser","go","useState","setName","findResult","isLoading","useEffect","btnFindClick","before","photo_200","src","description","city","first_name","last_name","className","size","onClick","Spinner","scroll","x","osName","platform","Persik","props","left","data-to","IOS","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a679ba18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react'\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport auth from './auth.json';\r\nimport Link from \"@vkontakte/vkui/dist/es6/components/Link/Link\";\r\n\r\nfunction makeIntoLink(link) {\r\n    if (link.match(/^[a-zA-Z0-9]+(.com)/) && link.indexOf('https') === -1) {\r\n        //link.replace(link, \"<a href=\\\"http://www.\" + link+ \"\\\">\" + link + \"<\\/a>\"); <-- OLD\r\n        link = \"https://\" + link; // <-- NEW\r\n    }\r\n    return link;\r\n}\r\n\r\nexport const btnSendClick = (name, setFindResult, setColumns, setLoading, allTable, setAllTable, myColumns, myValue) => {\r\n\r\n// Config variables\r\n    const SPREADSHEET_ID = auth.SPREADSHEET_ID;\r\n    const SHEET_ID = auth.SHEET_ID;\r\n    const CLIENT_EMAIL = auth.client_email;\r\n    const PRIVATE_KEY = auth.private_key;\r\n\r\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n\r\n    const setResult = (columns, dataSource1) => {\r\n        {\r\n            let dataSource = dataSource1.filter(item => {\r\n                if (!name) {\r\n                    return item;\r\n                }\r\n                let find = false;\r\n                if (myValue === undefined) {\r\n                    for (let i in item) {\r\n                        if (typeof item[i] === 'string' && item[i].toLowerCase().indexOf(name) > -1) {\r\n                            find = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (name)\r\n                        switch (name) {\r\n                            case 'lines_max':\r\n                                if (item['lines']) {\r\n                                    if (parseInt(myValue) >= parseInt(item['lines'])) {\r\n                                        find = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'lines_min':\r\n                                if (item['lines']) {\r\n                                    if (parseInt(myValue) <= parseInt(item['lines'])) {\r\n                                        find = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'price2':\r\n                                if (item[name]) {\r\n                                    if (parseInt(myValue) >= parseInt(item['price2'])) {\r\n                                        find = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'price1':\r\n                                if (item[name]) {\r\n                                    if (parseInt(myValue) <= parseInt(item['price1'])) {\r\n                                        find = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                if (item[name]) {\r\n                                    if (item[name].toLowerCase().indexOf(myValue) > -1) {\r\n                                        find = true;\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                }\r\n                if (find) {\r\n                    return item;\r\n                }\r\n            });\r\n            if (allTable.length === 0) {\r\n                for (let i = 0; i < columns.length; i++) {\r\n                    if (columns[i] === 'link_vk') {\r\n                        columns[i] = {\r\n                            title: columns[i],\r\n                            dataIndex: columns[i],\r\n                            key: columns[i],\r\n                            render: text => <Link href={makeIntoLink(text)} target=\"_blank\">{text}</Link>,\r\n                        }\r\n                    } else columns[i] = {\r\n                        title: columns[i],\r\n                        dataIndex: columns[i],\r\n                        key: columns[i]\r\n                    }\r\n                }\r\n            }\r\n            setLoading(false);\r\n            setColumns(columns);\r\n            setFindResult(dataSource);\r\n            if (allTable.length === 0) setAllTable(dataSource);\r\n        }\r\n    };\r\n\r\n    if (allTable.length === 0) {\r\n        const appendSpreadsheet = async (row) => {\r\n            try {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: CLIENT_EMAIL,\r\n                    private_key: PRIVATE_KEY,\r\n                })\r\n                // loads document properties and worksheets\r\n                await doc.loadInfo();\r\n\r\n                const sheet = doc.sheetsById[\"443542541\"];\r\n                const result = await sheet.getRows();\r\n                return (result);\r\n            } catch (e) {\r\n                setLoading(false);\r\n                console.error('Error: ', e);\r\n                return ([]);\r\n            }\r\n        };\r\n\r\n        const newRow = {Name: name};\r\n\r\n        appendSpreadsheet(newRow)\r\n            .then((value) => {\r\n                let columns = (value.length) ? value[0]._sheet.headerValues : [];\r\n                let dataSource = value.map(item => {\r\n                    let result = Object.assign({}, item);\r\n                    for (let i in result) {\r\n                        if (i[0] === '_') delete result[i];\r\n                    }\r\n                    if (result.id) result.key = result.id;\r\n                    return result;\r\n                });\r\n                setResult(columns, dataSource);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                console.error(error)\r\n            });\r\n    }\r\n    else {\r\n        setResult(myColumns, allTable);\r\n    }\r\n    //alert(JSON.stringify({name: name, surname: surname, team: team, count: count}));\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {FormLayout, FormLayoutGroup, Input, Snackbar, Icon24Favorite} from '@vkontakte/vkui/';\r\nimport Select from \"@vkontakte/vkui/dist/es6/components/Select/Select\";\r\n\r\nconst FindFields = ({ inputValue, setInputValue, selectValue, setSelectValue }) => {\r\n\r\n    return (\r\n        <FormLayoutGroup top=\"Поиск по полю\">\r\n            <Select placeholder=\"Выберите поле для поиска\" value={selectValue} onChange={e => {\r\n                setSelectValue(e.target.value);\r\n                setInputValue('');\r\n            }} >\r\n                <option value=\"name\">Название</option>\r\n                <option value=\"metro\">Метро</option>\r\n                <option value=\"price2\">Максимальная цена</option>\r\n                <option value=\"price1\">Минимальная цена</option>\r\n                <option value=\"lines_min\">Минимальное кол-во дорожек</option>\r\n                <option value=\"lines_max\">Максимальное кол-во дорожек</option>\r\n            </Select>\r\n            {(selectValue) ? <Input type=\"text\" value={inputValue} placeholder=\"Введите необходимые слова\" onChange={e => setInputValue(e.target.value)}/> : ''}\r\n        </FormLayoutGroup>\r\n    );\r\n};\r\n\r\nexport default FindFields;","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {FormLayout, FormLayoutGroup, Input, Snackbar, Icon24Favorite} from '@vkontakte/vkui/';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Spinner from \"@vkontakte/vkui/dist/es6/components/Spinner/Spinner\";\nimport bridge from '@vkontakte/vk-bridge';\nimport {btnSendClick} from './../utils/sendCLick'\nimport {Row, Col, Table} from 'antd'\nimport 'antd/dist/antd.css';\nimport './Home.css';\nimport FindFields from \"./Components/FindFields\";\n\nconst bufColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n    },\n];\n\nconst Home = ({ id, go, fetchedUser }) => {\n\n    // const [count, setCount] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [findResult, setFindResult] =  useState([]);\n    const [columns, setColumns] =  useState(bufColumns);\n    const [isLoading, setLoading] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [selectValue, setSelectValue] =  useState(\"\");\n    const [allTable, setAllTable] =  useState([]);\n\n    useEffect(() => {\n        setLoading(true);\n        btnSendClick(name.toLowerCase(), setFindResult, setColumns, setLoading, allTable, setAllTable, columns);\n    }, []);\n\n    const btnFindClick = (name, value) => {\n        setLoading(true);\n        btnSendClick(name.toLowerCase(), setFindResult, setColumns, setLoading, allTable, setAllTable, columns, value);\n    };\n\n    return (<Panel id={id}>\n            <PanelHeader>Введите свой результат</PanelHeader>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Bridge\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <FormLayout className=\"bowl-Form\">\n                        <FormLayoutGroup top=\"Поиск\">\n                            <Input type=\"text\" value={name} placeholder=\"Введите необходимые слова\" onChange={e => setName(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FindFields inputValue={inputValue} setInputValue={setInputValue} selectValue={selectValue} setSelectValue={setSelectValue}/>\n                        <Button size=\"xl\" onClick={() => {\n                            if (inputValue && selectValue !== '') btnFindClick(selectValue, inputValue); else btnFindClick(name);\n                        }}>Найти</Button>\n                    </FormLayout>\n                    {(findResult && findResult.length > 0) ? (isLoading) ?\n                        <div>\n                            <Spinner size=\"large\" className='table-spinner' />\n                            <Table dataSource={findResult} columns={columns} scroll={{ x: 1500 }} />\n                        </div>:\n                       <Table dataSource={findResult} columns={columns} scroll={{ x: 1500 }} /> :\n                        (isLoading) ? <Spinner size=\"large\" className='table-spinner-short' /> : ''}\n                </Div>\n            </Group>\n        </Panel>\n    );\n};\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('home');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(null);\n\n    useEffect(() => {\n        bridge.subscribe(({ detail: { type, data }}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            setPopout(null);\n        }\n        fetchData();\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <View activePanel={activePanel} popout={popout}>\n            <Home id='home' fetchedUser={fetchedUser} go={go} />\n            <Persik id='persik' go={go} />\n        </View>\n    );\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}