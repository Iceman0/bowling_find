{"version":3,"sources":["img/persik.png","utils/sendCLick.js","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","btnSendClick","name","setFindResult","setColumns","setLoading","SPREADSHEET_ID","auth","CLIENT_EMAIL","SHEET_ID","client_email","PRIVATE_KEY","private_key","doc","GoogleSpreadsheet","row","a","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","result","console","error","appendSpreadsheet","Name","then","value","columns","length","_sheet","headerValues","dataSource","map","item","Object","assign","i","id","key","filter","find","toLowerCase","indexOf","title","dataIndex","catch","bufColumns","Home","fetchedUser","go","useState","setName","findResult","isLoading","useEffect","before","photo_200","src","description","city","first_name","last_name","className","top","type","placeholder","onChange","e","target","size","onClick","btnFindClick","Spinner","scroll","x","osName","platform","Persik","props","left","data-to","IOS","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.858a9bc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import bridge from '@vkontakte/vk-bridge';\r\n//import * from jQuery;\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport auth from './auth.json';\r\n\r\nexport const btnSendClick = (name, setFindResult, setColumns, setLoading) => {\r\n\r\n// Config variables\r\n    const SPREADSHEET_ID = auth.SPREADSHEET_ID;\r\n    const SHEET_ID = auth.SHEET_ID;\r\n    const CLIENT_EMAIL = auth.client_email;\r\n    const PRIVATE_KEY = auth.private_key;\r\n\r\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n\r\n    const appendSpreadsheet = async (row) => {\r\n        try {\r\n            await doc.useServiceAccountAuth({\r\n                client_email: CLIENT_EMAIL,\r\n                private_key: PRIVATE_KEY,\r\n            })\r\n            // loads document properties and worksheets\r\n            await doc.loadInfo();\r\n\r\n            const sheet = doc.sheetsById[\"443542541\"];\r\n            const result = await sheet.getRows();\r\n            return(result);\r\n        } catch (e) {\r\n            setLoading(false);\r\n            console.error('Error: ', e);\r\n            return([]);\r\n        }\r\n    };\r\n\r\n    const newRow = { Name: name};\r\n\r\n\r\n    appendSpreadsheet(newRow)\r\n        .then((value) => {\r\n            let columns = (value.length) ? value[0]._sheet.headerValues : [];\r\n\r\n            let dataSource = value.map(item => {\r\n                let result = Object.assign({}, item);\r\n                for(let i in result) {\r\n                    if (i[0] === '_') delete result[i];\r\n                }\r\n                if (result.id) result.key = result.id;\r\n                return result;\r\n            }).filter(item => {\r\n                if (!name) {\r\n                    return item;\r\n                }\r\n                let find = false;\r\n                for (let i in item) {\r\n                    if (typeof item[i] === 'string' && item[i].toLowerCase().indexOf(name) > -1) {\r\n                        find = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (find) {\r\n                    return item;\r\n                }\r\n            });\r\n            for(let i = 0; i<columns.length; i++) {\r\n                columns[i] = {\r\n                    title: columns[i],\r\n                    dataIndex: columns[i],\r\n                    key: columns[i]\r\n                }\r\n            }\r\n            setLoading(false);\r\n            setColumns(columns);\r\n            setFindResult(dataSource);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(false);\r\n            console.error(error)\r\n        });\r\n    //alert(JSON.stringify({name: name, surname: surname, team: team, count: count}));\r\n};\r\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {FormLayout, FormLayoutGroup, Input, Snackbar, Icon24Favorite} from '@vkontakte/vkui/';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Spinner from \"@vkontakte/vkui/dist/es6/components/Spinner/Spinner\";\nimport bridge from '@vkontakte/vk-bridge';\nimport {btnSendClick} from './../utils/sendCLick'\nimport {Row, Col, Table} from 'antd'\nimport 'antd/dist/antd.css';\nimport './Home.css';\n\nconst bufColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n    },\n];\n\nconst Home = ({ id, go, fetchedUser }) => {\n\n    // const [count, setCount] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [findResult, setFindResult] =  useState([]);\n    const [columns, setColumns] =  useState(bufColumns);\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        btnSendClick(name.toLowerCase(), setFindResult, setColumns, setLoading);\n    }, []);\n\n    const btnFindClick = (name) => {\n        setLoading(true);\n        btnSendClick(name.toLowerCase(), setFindResult, setColumns, setLoading);\n    };\n\n    return (<Panel id={id}>\n            <PanelHeader>Введите свой результат</PanelHeader>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Bridge\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <FormLayout className=\"bowl-Form\">\n                        <FormLayoutGroup top=\"Поиск\">\n                            <Input type=\"text\" value={name} placeholder=\"Введите необходимые слова\" onChange={e => setName(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <Button size=\"xl\" onClick={() => btnFindClick(name)}>Найти</Button>\n                    </FormLayout>\n                    {(findResult && findResult.length > 0) ? (isLoading) ?\n                        <div>\n                            <Spinner size=\"large\" className='table-spinner' />\n                            <Table dataSource={findResult} columns={columns} scroll={{ x: 1500 }} />\n                        </div>:\n                       <Table dataSource={findResult} columns={columns} scroll={{ x: 1500 }} /> :\n                        (isLoading) ? <Spinner size=\"large\" className='table-spinner-short' /> : ''}\n                </Div>\n            </Group>\n        </Panel>\n    );\n};\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('home');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(null);\n\n    useEffect(() => {\n        bridge.subscribe(({ detail: { type, data }}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            setPopout(null);\n        }\n        fetchData();\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <View activePanel={activePanel} popout={popout}>\n            <Home id='home' fetchedUser={fetchedUser} go={go} />\n            <Persik id='persik' go={go} />\n        </View>\n    );\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}