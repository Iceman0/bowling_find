{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,oC,ynBC+D5BC,EApDF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAGpB,OAAQ,kBAAC,IAAD,CAAOF,GAAIA,GACX,kBAAC,IAAD,gBACCE,GACD,kBAAC,IAAD,CAAOC,MAAM,oCACT,kBAAC,IAAD,CACIC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKL,MAAQD,EAAYM,KAAKL,MAAQ,IAFvF,UAIQD,EAAYO,WAJpB,YAIkCP,EAAYQ,aAIlD,kBAAC,IAAD,CAAOP,MAAM,sBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASZ,EAAIa,UAAQ,UAAjD,kC,wEChBdC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOlB,GAAIkB,EAAMlB,IAChB,kBAAC,IAAD,CACCmB,KAAM,kBAAC,IAAD,CAAmBN,QAASK,EAAMjB,GAAIa,UAAQ,QAClDC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASf,IAAKgB,IAAQC,IAAI,qBCmB5BC,EAjCH,WAAO,IAAD,EACwBC,mBAAS,QADjC,mBACPC,EADO,KACMC,EADN,OAEiBF,mBAAS,MAF1B,mBAEPvB,EAFO,KAEM0B,EAFN,OAGcH,mBAAS,MAHvB,mBAGPI,EAHO,KAGCC,EAHD,KAKdC,qBAAU,WAAM,4CAQZ,4BAAAC,EAAA,sEACuBC,IAAOC,KAAK,uBADnC,OACUC,EADV,OAEIP,EAAQO,GACRL,EAAU,MAHd,4CARY,sBACZG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KAChC,GAAa,yBAATD,EAAiC,CACjC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALlC,mCAaZQ,KACD,IAEH,IAAM/C,EAAK,SAAAgD,GACPtB,EAAesB,EAAEC,cAAcC,QAAQC,KAG3C,OACI,kBAAC,IAAD,CAAM1B,YAAaA,EAAaG,OAAQA,GACpC,kBAAC,EAAD,CAAM7B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC7BpCgC,IAAOC,KAAK,gBAEZmB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.a349ef93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {FormLayout, FormLayoutGroup, Input} from '@vkontakte/vkui/';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => {\n\n\n    return (<Panel id={id}>\n            <PanelHeader>Example</PanelHeader>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Bridge\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n                    Show me the Persik, please\n                    </Button>\n                    {/*<FormLayout>*/}\n                        {/*<FormLayoutGroup top=\"Фамилия\">*/}\n                            {/*<Input type=\"text\" defaultValue=\"\" placeholder=\"Введите фамилию\"/>*/}\n                        {/*</FormLayoutGroup>*/}\n                        {/*<FormLayoutGroup top=\"Имя\">*/}\n                            {/*<Input type=\"text\" defaultValue=\"\" placeholder=\"Введите имя\"/>*/}\n                        {/*</FormLayoutGroup>*/}\n                        {/*<FormLayoutGroup top=\"Команда\">*/}\n                            {/*<Input type=\"text\" defaultValue=\"\" placeholder=\"Введите название команды\"/>*/}\n                        {/*</FormLayoutGroup>*/}\n                        {/*<Input type=\"number\" placeholder=\"Повторите кол-во очков\"/>*/}\n                        {/*<Button size=\"xl\">Отправить</Button>*/}\n                    {/*</FormLayout>*/}\n                </Div>\n            </Group>\n        </Panel>\n    );\n}\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('home');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(null);\n\n    useEffect(() => {\n        bridge.subscribe(({ detail: { type, data }}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            setPopout(null);\n        }\n        fetchData();\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <View activePanel={activePanel} popout={popout}>\n            <Home id='home' fetchedUser={fetchedUser} go={go} />\n            <Persik id='persik' go={go} />\n        </View>\n    );\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}